// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AudioPluginService.proto

#ifndef PROTOBUF_INCLUDED_AudioPluginService_2eproto
#define PROTOBUF_INCLUDED_AudioPluginService_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_AudioPluginService_2eproto 

namespace protobuf_AudioPluginService_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_AudioPluginService_2eproto
namespace org {
namespace androidaudioplugin {
class AliveStatus;
class AliveStatusDefaultTypeInternal;
extern AliveStatusDefaultTypeInternal _AliveStatus_default_instance_;
class CreateRequest;
class CreateRequestDefaultTypeInternal;
extern CreateRequestDefaultTypeInternal _CreateRequest_default_instance_;
class Extension;
class ExtensionDefaultTypeInternal;
extern ExtensionDefaultTypeInternal _Extension_default_instance_;
class GetStateRequest;
class GetStateRequestDefaultTypeInternal;
extern GetStateRequestDefaultTypeInternal _GetStateRequest_default_instance_;
class InstanceId;
class InstanceIdDefaultTypeInternal;
extern InstanceIdDefaultTypeInternal _InstanceId_default_instance_;
class PrepareRequest;
class PrepareRequestDefaultTypeInternal;
extern PrepareRequestDefaultTypeInternal _PrepareRequest_default_instance_;
class ProcessRequest;
class ProcessRequestDefaultTypeInternal;
extern ProcessRequestDefaultTypeInternal _ProcessRequest_default_instance_;
class SetStateRequest;
class SetStateRequestDefaultTypeInternal;
extern SetStateRequestDefaultTypeInternal _SetStateRequest_default_instance_;
class Size;
class SizeDefaultTypeInternal;
extern SizeDefaultTypeInternal _Size_default_instance_;
class Unit;
class UnitDefaultTypeInternal;
extern UnitDefaultTypeInternal _Unit_default_instance_;
}  // namespace androidaudioplugin
}  // namespace org
namespace google {
namespace protobuf {
template<> ::org::androidaudioplugin::AliveStatus* Arena::CreateMaybeMessage<::org::androidaudioplugin::AliveStatus>(Arena*);
template<> ::org::androidaudioplugin::CreateRequest* Arena::CreateMaybeMessage<::org::androidaudioplugin::CreateRequest>(Arena*);
template<> ::org::androidaudioplugin::Extension* Arena::CreateMaybeMessage<::org::androidaudioplugin::Extension>(Arena*);
template<> ::org::androidaudioplugin::GetStateRequest* Arena::CreateMaybeMessage<::org::androidaudioplugin::GetStateRequest>(Arena*);
template<> ::org::androidaudioplugin::InstanceId* Arena::CreateMaybeMessage<::org::androidaudioplugin::InstanceId>(Arena*);
template<> ::org::androidaudioplugin::PrepareRequest* Arena::CreateMaybeMessage<::org::androidaudioplugin::PrepareRequest>(Arena*);
template<> ::org::androidaudioplugin::ProcessRequest* Arena::CreateMaybeMessage<::org::androidaudioplugin::ProcessRequest>(Arena*);
template<> ::org::androidaudioplugin::SetStateRequest* Arena::CreateMaybeMessage<::org::androidaudioplugin::SetStateRequest>(Arena*);
template<> ::org::androidaudioplugin::Size* Arena::CreateMaybeMessage<::org::androidaudioplugin::Size>(Arena*);
template<> ::org::androidaudioplugin::Unit* Arena::CreateMaybeMessage<::org::androidaudioplugin::Unit>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace org {
namespace androidaudioplugin {

// ===================================================================

class Unit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.Unit) */ {
 public:
  Unit();
  virtual ~Unit();

  Unit(const Unit& from);

  inline Unit& operator=(const Unit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Unit(Unit&& from) noexcept
    : Unit() {
    *this = ::std::move(from);
  }

  inline Unit& operator=(Unit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Unit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Unit* internal_default_instance() {
    return reinterpret_cast<const Unit*>(
               &_Unit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Unit* other);
  friend void swap(Unit& a, Unit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Unit* New() const final {
    return CreateMaybeMessage<Unit>(NULL);
  }

  Unit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Unit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Unit& from);
  void MergeFrom(const Unit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Unit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.Unit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AliveStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.AliveStatus) */ {
 public:
  AliveStatus();
  virtual ~AliveStatus();

  AliveStatus(const AliveStatus& from);

  inline AliveStatus& operator=(const AliveStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AliveStatus(AliveStatus&& from) noexcept
    : AliveStatus() {
    *this = ::std::move(from);
  }

  inline AliveStatus& operator=(AliveStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AliveStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AliveStatus* internal_default_instance() {
    return reinterpret_cast<const AliveStatus*>(
               &_AliveStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AliveStatus* other);
  friend void swap(AliveStatus& a, AliveStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AliveStatus* New() const final {
    return CreateMaybeMessage<AliveStatus>(NULL);
  }

  AliveStatus* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AliveStatus>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AliveStatus& from);
  void MergeFrom(const AliveStatus& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AliveStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_alive = 1;
  void clear_is_alive();
  static const int kIsAliveFieldNumber = 1;
  bool is_alive() const;
  void set_is_alive(bool value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.AliveStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_alive_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Size : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.Size) */ {
 public:
  Size();
  virtual ~Size();

  Size(const Size& from);

  inline Size& operator=(const Size& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Size(Size&& from) noexcept
    : Size() {
    *this = ::std::move(from);
  }

  inline Size& operator=(Size&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Size& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Size* internal_default_instance() {
    return reinterpret_cast<const Size*>(
               &_Size_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Size* other);
  friend void swap(Size& a, Size& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Size* New() const final {
    return CreateMaybeMessage<Size>(NULL);
  }

  Size* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Size>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Size& from);
  void MergeFrom(const Size& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Size* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 size = 1;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.Size)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InstanceId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.InstanceId) */ {
 public:
  InstanceId();
  virtual ~InstanceId();

  InstanceId(const InstanceId& from);

  inline InstanceId& operator=(const InstanceId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InstanceId(InstanceId&& from) noexcept
    : InstanceId() {
    *this = ::std::move(from);
  }

  inline InstanceId& operator=(InstanceId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InstanceId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InstanceId* internal_default_instance() {
    return reinterpret_cast<const InstanceId*>(
               &_InstanceId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(InstanceId* other);
  friend void swap(InstanceId& a, InstanceId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InstanceId* New() const final {
    return CreateMaybeMessage<InstanceId>(NULL);
  }

  InstanceId* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InstanceId>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InstanceId& from);
  void MergeFrom(const InstanceId& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InstanceId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.InstanceId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.CreateRequest) */ {
 public:
  CreateRequest();
  virtual ~CreateRequest();

  CreateRequest(const CreateRequest& from);

  inline CreateRequest& operator=(const CreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRequest(CreateRequest&& from) noexcept
    : CreateRequest() {
    *this = ::std::move(from);
  }

  inline CreateRequest& operator=(CreateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateRequest* internal_default_instance() {
    return reinterpret_cast<const CreateRequest*>(
               &_CreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(CreateRequest* other);
  friend void swap(CreateRequest& a, CreateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRequest* New() const final {
    return CreateMaybeMessage<CreateRequest>(NULL);
  }

  CreateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateRequest& from);
  void MergeFrom(const CreateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .org.androidaudioplugin.Extension extensions = 3;
  int extensions_size() const;
  void clear_extensions();
  static const int kExtensionsFieldNumber = 3;
  ::org::androidaudioplugin::Extension* mutable_extensions(int index);
  ::google::protobuf::RepeatedPtrField< ::org::androidaudioplugin::Extension >*
      mutable_extensions();
  const ::org::androidaudioplugin::Extension& extensions(int index) const;
  ::org::androidaudioplugin::Extension* add_extensions();
  const ::google::protobuf::RepeatedPtrField< ::org::androidaudioplugin::Extension >&
      extensions() const;

  // string plugin_id = 1;
  void clear_plugin_id();
  static const int kPluginIdFieldNumber = 1;
  const ::std::string& plugin_id() const;
  void set_plugin_id(const ::std::string& value);
  #if LANG_CXX11
  void set_plugin_id(::std::string&& value);
  #endif
  void set_plugin_id(const char* value);
  void set_plugin_id(const char* value, size_t size);
  ::std::string* mutable_plugin_id();
  ::std::string* release_plugin_id();
  void set_allocated_plugin_id(::std::string* plugin_id);

  // int32 sample_rate = 2;
  void clear_sample_rate();
  static const int kSampleRateFieldNumber = 2;
  ::google::protobuf::int32 sample_rate() const;
  void set_sample_rate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.CreateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::org::androidaudioplugin::Extension > extensions_;
  ::google::protobuf::internal::ArenaStringPtr plugin_id_;
  ::google::protobuf::int32 sample_rate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Extension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.Extension) */ {
 public:
  Extension();
  virtual ~Extension();

  Extension(const Extension& from);

  inline Extension& operator=(const Extension& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Extension(Extension&& from) noexcept
    : Extension() {
    *this = ::std::move(from);
  }

  inline Extension& operator=(Extension&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Extension& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Extension* internal_default_instance() {
    return reinterpret_cast<const Extension*>(
               &_Extension_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Extension* other);
  friend void swap(Extension& a, Extension& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Extension* New() const final {
    return CreateMaybeMessage<Extension>(NULL);
  }

  Extension* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Extension>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Extension& from);
  void MergeFrom(const Extension& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Extension* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string uri = 1;
  void clear_uri();
  static const int kUriFieldNumber = 1;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const char* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // int64 fd = 2;
  void clear_fd();
  static const int kFdFieldNumber = 2;
  ::google::protobuf::int64 fd() const;
  void set_fd(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.Extension)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::int64 fd_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.GetStateRequest) */ {
 public:
  GetStateRequest();
  virtual ~GetStateRequest();

  GetStateRequest(const GetStateRequest& from);

  inline GetStateRequest& operator=(const GetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetStateRequest(GetStateRequest&& from) noexcept
    : GetStateRequest() {
    *this = ::std::move(from);
  }

  inline GetStateRequest& operator=(GetStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetStateRequest* internal_default_instance() {
    return reinterpret_cast<const GetStateRequest*>(
               &_GetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(GetStateRequest* other);
  friend void swap(GetStateRequest& a, GetStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetStateRequest* New() const final {
    return CreateMaybeMessage<GetStateRequest>(NULL);
  }

  GetStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetStateRequest& from);
  void MergeFrom(const GetStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shared_memory_fd = 2;
  void clear_shared_memory_fd();
  static const int kSharedMemoryFdFieldNumber = 2;
  ::google::protobuf::int64 shared_memory_fd() const;
  void set_shared_memory_fd(::google::protobuf::int64 value);

  // int32 instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.GetStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shared_memory_fd_;
  ::google::protobuf::int32 instance_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetStateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.SetStateRequest) */ {
 public:
  SetStateRequest();
  virtual ~SetStateRequest();

  SetStateRequest(const SetStateRequest& from);

  inline SetStateRequest& operator=(const SetStateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetStateRequest(SetStateRequest&& from) noexcept
    : SetStateRequest() {
    *this = ::std::move(from);
  }

  inline SetStateRequest& operator=(SetStateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetStateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SetStateRequest* internal_default_instance() {
    return reinterpret_cast<const SetStateRequest*>(
               &_SetStateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(SetStateRequest* other);
  friend void swap(SetStateRequest& a, SetStateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetStateRequest* New() const final {
    return CreateMaybeMessage<SetStateRequest>(NULL);
  }

  SetStateRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SetStateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SetStateRequest& from);
  void MergeFrom(const SetStateRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SetStateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shared_memory_fd = 2;
  void clear_shared_memory_fd();
  static const int kSharedMemoryFdFieldNumber = 2;
  ::google::protobuf::int64 shared_memory_fd() const;
  void set_shared_memory_fd(::google::protobuf::int64 value);

  // int32 instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // int32 size = 3;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.SetStateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shared_memory_fd_;
  ::google::protobuf::int32 instance_id_;
  ::google::protobuf::int32 size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PrepareRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.PrepareRequest) */ {
 public:
  PrepareRequest();
  virtual ~PrepareRequest();

  PrepareRequest(const PrepareRequest& from);

  inline PrepareRequest& operator=(const PrepareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PrepareRequest(PrepareRequest&& from) noexcept
    : PrepareRequest() {
    *this = ::std::move(from);
  }

  inline PrepareRequest& operator=(PrepareRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrepareRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PrepareRequest* internal_default_instance() {
    return reinterpret_cast<const PrepareRequest*>(
               &_PrepareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(PrepareRequest* other);
  friend void swap(PrepareRequest& a, PrepareRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PrepareRequest* New() const final {
    return CreateMaybeMessage<PrepareRequest>(NULL);
  }

  PrepareRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PrepareRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PrepareRequest& from);
  void MergeFrom(const PrepareRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PrepareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 shared_memory_fds = 4;
  int shared_memory_fds_size() const;
  void clear_shared_memory_fds();
  static const int kSharedMemoryFdsFieldNumber = 4;
  ::google::protobuf::int32 shared_memory_fds(int index) const;
  void set_shared_memory_fds(int index, ::google::protobuf::int32 value);
  void add_shared_memory_fds(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      shared_memory_fds() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_shared_memory_fds();

  // int32 instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // int32 frame_count = 2;
  void clear_frame_count();
  static const int kFrameCountFieldNumber = 2;
  ::google::protobuf::int32 frame_count() const;
  void set_frame_count(::google::protobuf::int32 value);

  // int32 port_count = 3;
  void clear_port_count();
  static const int kPortCountFieldNumber = 3;
  ::google::protobuf::int32 port_count() const;
  void set_port_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.PrepareRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > shared_memory_fds_;
  mutable int _shared_memory_fds_cached_byte_size_;
  ::google::protobuf::int32 instance_id_;
  ::google::protobuf::int32 frame_count_;
  ::google::protobuf::int32 port_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProcessRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:org.androidaudioplugin.ProcessRequest) */ {
 public:
  ProcessRequest();
  virtual ~ProcessRequest();

  ProcessRequest(const ProcessRequest& from);

  inline ProcessRequest& operator=(const ProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcessRequest(ProcessRequest&& from) noexcept
    : ProcessRequest() {
    *this = ::std::move(from);
  }

  inline ProcessRequest& operator=(ProcessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProcessRequest* internal_default_instance() {
    return reinterpret_cast<const ProcessRequest*>(
               &_ProcessRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ProcessRequest* other);
  friend void swap(ProcessRequest& a, ProcessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcessRequest* New() const final {
    return CreateMaybeMessage<ProcessRequest>(NULL);
  }

  ProcessRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProcessRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProcessRequest& from);
  void MergeFrom(const ProcessRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 instance_id = 1;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 1;
  ::google::protobuf::int32 instance_id() const;
  void set_instance_id(::google::protobuf::int32 value);

  // int32 timeout_nanoseconds = 2;
  void clear_timeout_nanoseconds();
  static const int kTimeoutNanosecondsFieldNumber = 2;
  ::google::protobuf::int32 timeout_nanoseconds() const;
  void set_timeout_nanoseconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:org.androidaudioplugin.ProcessRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 instance_id_;
  ::google::protobuf::int32 timeout_nanoseconds_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_AudioPluginService_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Unit

// -------------------------------------------------------------------

// AliveStatus

// bool is_alive = 1;
inline void AliveStatus::clear_is_alive() {
  is_alive_ = false;
}
inline bool AliveStatus::is_alive() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.AliveStatus.is_alive)
  return is_alive_;
}
inline void AliveStatus::set_is_alive(bool value) {
  
  is_alive_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.AliveStatus.is_alive)
}

// -------------------------------------------------------------------

// Size

// int32 size = 1;
inline void Size::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 Size::size() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.Size.size)
  return size_;
}
inline void Size::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.Size.size)
}

// -------------------------------------------------------------------

// InstanceId

// int32 instance_id = 1;
inline void InstanceId::clear_instance_id() {
  instance_id_ = 0;
}
inline ::google::protobuf::int32 InstanceId::instance_id() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.InstanceId.instance_id)
  return instance_id_;
}
inline void InstanceId::set_instance_id(::google::protobuf::int32 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.InstanceId.instance_id)
}

// -------------------------------------------------------------------

// CreateRequest

// string plugin_id = 1;
inline void CreateRequest::clear_plugin_id() {
  plugin_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateRequest::plugin_id() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.CreateRequest.plugin_id)
  return plugin_id_.GetNoArena();
}
inline void CreateRequest::set_plugin_id(const ::std::string& value) {
  
  plugin_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.CreateRequest.plugin_id)
}
#if LANG_CXX11
inline void CreateRequest::set_plugin_id(::std::string&& value) {
  
  plugin_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.androidaudioplugin.CreateRequest.plugin_id)
}
#endif
inline void CreateRequest::set_plugin_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  plugin_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.androidaudioplugin.CreateRequest.plugin_id)
}
inline void CreateRequest::set_plugin_id(const char* value, size_t size) {
  
  plugin_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.androidaudioplugin.CreateRequest.plugin_id)
}
inline ::std::string* CreateRequest::mutable_plugin_id() {
  
  // @@protoc_insertion_point(field_mutable:org.androidaudioplugin.CreateRequest.plugin_id)
  return plugin_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateRequest::release_plugin_id() {
  // @@protoc_insertion_point(field_release:org.androidaudioplugin.CreateRequest.plugin_id)
  
  return plugin_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateRequest::set_allocated_plugin_id(::std::string* plugin_id) {
  if (plugin_id != NULL) {
    
  } else {
    
  }
  plugin_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), plugin_id);
  // @@protoc_insertion_point(field_set_allocated:org.androidaudioplugin.CreateRequest.plugin_id)
}

// int32 sample_rate = 2;
inline void CreateRequest::clear_sample_rate() {
  sample_rate_ = 0;
}
inline ::google::protobuf::int32 CreateRequest::sample_rate() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.CreateRequest.sample_rate)
  return sample_rate_;
}
inline void CreateRequest::set_sample_rate(::google::protobuf::int32 value) {
  
  sample_rate_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.CreateRequest.sample_rate)
}

// repeated .org.androidaudioplugin.Extension extensions = 3;
inline int CreateRequest::extensions_size() const {
  return extensions_.size();
}
inline void CreateRequest::clear_extensions() {
  extensions_.Clear();
}
inline ::org::androidaudioplugin::Extension* CreateRequest::mutable_extensions(int index) {
  // @@protoc_insertion_point(field_mutable:org.androidaudioplugin.CreateRequest.extensions)
  return extensions_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::org::androidaudioplugin::Extension >*
CreateRequest::mutable_extensions() {
  // @@protoc_insertion_point(field_mutable_list:org.androidaudioplugin.CreateRequest.extensions)
  return &extensions_;
}
inline const ::org::androidaudioplugin::Extension& CreateRequest::extensions(int index) const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.CreateRequest.extensions)
  return extensions_.Get(index);
}
inline ::org::androidaudioplugin::Extension* CreateRequest::add_extensions() {
  // @@protoc_insertion_point(field_add:org.androidaudioplugin.CreateRequest.extensions)
  return extensions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::org::androidaudioplugin::Extension >&
CreateRequest::extensions() const {
  // @@protoc_insertion_point(field_list:org.androidaudioplugin.CreateRequest.extensions)
  return extensions_;
}

// -------------------------------------------------------------------

// Extension

// string uri = 1;
inline void Extension::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Extension::uri() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.Extension.uri)
  return uri_.GetNoArena();
}
inline void Extension::set_uri(const ::std::string& value) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.Extension.uri)
}
#if LANG_CXX11
inline void Extension::set_uri(::std::string&& value) {
  
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:org.androidaudioplugin.Extension.uri)
}
#endif
inline void Extension::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:org.androidaudioplugin.Extension.uri)
}
inline void Extension::set_uri(const char* value, size_t size) {
  
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:org.androidaudioplugin.Extension.uri)
}
inline ::std::string* Extension::mutable_uri() {
  
  // @@protoc_insertion_point(field_mutable:org.androidaudioplugin.Extension.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Extension::release_uri() {
  // @@protoc_insertion_point(field_release:org.androidaudioplugin.Extension.uri)
  
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Extension::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    
  } else {
    
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:org.androidaudioplugin.Extension.uri)
}

// int64 fd = 2;
inline void Extension::clear_fd() {
  fd_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Extension::fd() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.Extension.fd)
  return fd_;
}
inline void Extension::set_fd(::google::protobuf::int64 value) {
  
  fd_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.Extension.fd)
}

// -------------------------------------------------------------------

// GetStateRequest

// int32 instance_id = 1;
inline void GetStateRequest::clear_instance_id() {
  instance_id_ = 0;
}
inline ::google::protobuf::int32 GetStateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.GetStateRequest.instance_id)
  return instance_id_;
}
inline void GetStateRequest::set_instance_id(::google::protobuf::int32 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.GetStateRequest.instance_id)
}

// int64 shared_memory_fd = 2;
inline void GetStateRequest::clear_shared_memory_fd() {
  shared_memory_fd_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetStateRequest::shared_memory_fd() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.GetStateRequest.shared_memory_fd)
  return shared_memory_fd_;
}
inline void GetStateRequest::set_shared_memory_fd(::google::protobuf::int64 value) {
  
  shared_memory_fd_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.GetStateRequest.shared_memory_fd)
}

// -------------------------------------------------------------------

// SetStateRequest

// int32 instance_id = 1;
inline void SetStateRequest::clear_instance_id() {
  instance_id_ = 0;
}
inline ::google::protobuf::int32 SetStateRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.SetStateRequest.instance_id)
  return instance_id_;
}
inline void SetStateRequest::set_instance_id(::google::protobuf::int32 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.SetStateRequest.instance_id)
}

// int64 shared_memory_fd = 2;
inline void SetStateRequest::clear_shared_memory_fd() {
  shared_memory_fd_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SetStateRequest::shared_memory_fd() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.SetStateRequest.shared_memory_fd)
  return shared_memory_fd_;
}
inline void SetStateRequest::set_shared_memory_fd(::google::protobuf::int64 value) {
  
  shared_memory_fd_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.SetStateRequest.shared_memory_fd)
}

// int32 size = 3;
inline void SetStateRequest::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 SetStateRequest::size() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.SetStateRequest.size)
  return size_;
}
inline void SetStateRequest::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.SetStateRequest.size)
}

// -------------------------------------------------------------------

// PrepareRequest

// int32 instance_id = 1;
inline void PrepareRequest::clear_instance_id() {
  instance_id_ = 0;
}
inline ::google::protobuf::int32 PrepareRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.PrepareRequest.instance_id)
  return instance_id_;
}
inline void PrepareRequest::set_instance_id(::google::protobuf::int32 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.PrepareRequest.instance_id)
}

// int32 frame_count = 2;
inline void PrepareRequest::clear_frame_count() {
  frame_count_ = 0;
}
inline ::google::protobuf::int32 PrepareRequest::frame_count() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.PrepareRequest.frame_count)
  return frame_count_;
}
inline void PrepareRequest::set_frame_count(::google::protobuf::int32 value) {
  
  frame_count_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.PrepareRequest.frame_count)
}

// int32 port_count = 3;
inline void PrepareRequest::clear_port_count() {
  port_count_ = 0;
}
inline ::google::protobuf::int32 PrepareRequest::port_count() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.PrepareRequest.port_count)
  return port_count_;
}
inline void PrepareRequest::set_port_count(::google::protobuf::int32 value) {
  
  port_count_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.PrepareRequest.port_count)
}

// repeated int32 shared_memory_fds = 4;
inline int PrepareRequest::shared_memory_fds_size() const {
  return shared_memory_fds_.size();
}
inline void PrepareRequest::clear_shared_memory_fds() {
  shared_memory_fds_.Clear();
}
inline ::google::protobuf::int32 PrepareRequest::shared_memory_fds(int index) const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.PrepareRequest.shared_memory_fds)
  return shared_memory_fds_.Get(index);
}
inline void PrepareRequest::set_shared_memory_fds(int index, ::google::protobuf::int32 value) {
  shared_memory_fds_.Set(index, value);
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.PrepareRequest.shared_memory_fds)
}
inline void PrepareRequest::add_shared_memory_fds(::google::protobuf::int32 value) {
  shared_memory_fds_.Add(value);
  // @@protoc_insertion_point(field_add:org.androidaudioplugin.PrepareRequest.shared_memory_fds)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PrepareRequest::shared_memory_fds() const {
  // @@protoc_insertion_point(field_list:org.androidaudioplugin.PrepareRequest.shared_memory_fds)
  return shared_memory_fds_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PrepareRequest::mutable_shared_memory_fds() {
  // @@protoc_insertion_point(field_mutable_list:org.androidaudioplugin.PrepareRequest.shared_memory_fds)
  return &shared_memory_fds_;
}

// -------------------------------------------------------------------

// ProcessRequest

// int32 instance_id = 1;
inline void ProcessRequest::clear_instance_id() {
  instance_id_ = 0;
}
inline ::google::protobuf::int32 ProcessRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.ProcessRequest.instance_id)
  return instance_id_;
}
inline void ProcessRequest::set_instance_id(::google::protobuf::int32 value) {
  
  instance_id_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.ProcessRequest.instance_id)
}

// int32 timeout_nanoseconds = 2;
inline void ProcessRequest::clear_timeout_nanoseconds() {
  timeout_nanoseconds_ = 0;
}
inline ::google::protobuf::int32 ProcessRequest::timeout_nanoseconds() const {
  // @@protoc_insertion_point(field_get:org.androidaudioplugin.ProcessRequest.timeout_nanoseconds)
  return timeout_nanoseconds_;
}
inline void ProcessRequest::set_timeout_nanoseconds(::google::protobuf::int32 value) {
  
  timeout_nanoseconds_ = value;
  // @@protoc_insertion_point(field_set:org.androidaudioplugin.ProcessRequest.timeout_nanoseconds)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace androidaudioplugin
}  // namespace org

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_AudioPluginService_2eproto
